// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Flow for collecting user feedback on clothing style suggestions and using it to improve the AI model over time.
 *
 * - improveSuggestionsWithFeedback - A function that handles the feedback collection and model improvement process.
 * - ImproveSuggestionsWithFeedbackInput - The input type for the improveSuggestionsWithFeedback function.
 * - ImproveSuggestionsWithFeedbackOutput - The return type for the improveSuggestionsWithFeedback function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ImproveSuggestionsWithFeedbackInputSchema = z.object({
  suggestion: z.string().describe('The AI clothing style suggestion.'),
  feedback: z
    .string()
    .describe(
      'User feedback on the suggestion, including what they liked or disliked.'
    ),
  industry: z.string().describe('The industry of the headshot.'),
  role: z.string().describe('The role of the person in the headshot.'),
  stylePreferences: z.string().describe('The style preferences of the user.'),
  rating: z.number().min(1).max(5).describe('The user rating of the suggestion from 1 to 5.'),
});
export type ImproveSuggestionsWithFeedbackInput = z.infer<
  typeof ImproveSuggestionsWithFeedbackInputSchema
>;

const ImproveSuggestionsWithFeedbackOutputSchema = z.object({
  improvement: z
    .string()
    .describe(
      'A summary of how the model can be improved based on the feedback.'
    ),
});
export type ImproveSuggestionsWithFeedbackOutput = z.infer<
  typeof ImproveSuggestionsWithFeedbackOutputSchema
>;

export async function improveSuggestionsWithFeedback(
  input: ImproveSuggestionsWithFeedbackInput
): Promise<ImproveSuggestionsWithFeedbackOutput> {
  return improveSuggestionsWithFeedbackFlow(input);
}

const prompt = ai.definePrompt({
  name: 'improveSuggestionsWithFeedbackPrompt',
  input: {schema: ImproveSuggestionsWithFeedbackInputSchema},
  output: {schema: ImproveSuggestionsWithFeedbackOutputSchema},
  prompt: `You are an AI style consultant who is helping improve an AI model's ability to give high quality style recommendations.

Analyze the user's feedback on the AI's suggestion, and summarize how the model can be improved for future suggestions.

Consider the user's industry, role, and style preferences when determining how to improve the model.

Suggestion: {{{suggestion}}}
Feedback: {{{feedback}}}
Industry: {{{industry}}}
Role: {{{role}}}
Style Preferences: {{{stylePreferences}}}
Rating: {{{rating}}}

Improvement Summary:`,
});

const improveSuggestionsWithFeedbackFlow = ai.defineFlow(
  {
    name: 'improveSuggestionsWithFeedbackFlow',
    inputSchema: ImproveSuggestionsWithFeedbackInputSchema,
    outputSchema: ImproveSuggestionsWithFeedbackOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
